import java.nio.charset.StandardCharsets

plugins {
    id 'maven-publish'
    id 'java'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'me.m64diamondstar'
version = '1.0.0-ALPHA'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation "net.kyori:adventure-api:4.16.0"
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"
    compileOnly("org.realityforge.org.jetbrains.annotations:org.jetbrains.annotations:1.7.0")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks {
    compileJava {
        options.encoding = StandardCharsets.UTF_8.name() // We want UTF-8 for everything

        // Set the release flag. This configures what version bytecode the compiler will emit, as well as what JDK APIs are usable.
        // See https://openjdk.java.net/jeps/247 for more information.
        options.release.set(17)
    }

    javadoc {
        options.encoding = StandardCharsets.UTF_8.name() // We want UTF-8 for everything
    }
}

shadowJar {
    // Rename the jar file
    archiveBaseName.set("DialogueMaster-API")
    archiveClassifier.set('')
    archiveVersion.set(project.version.toString())

    // Include dependencies in the fat JAR
    configurations = [project.configurations.shadow]
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'me.m64diamondstar'
            artifactId = 'DialogueMaster-API'
            version = '1.0-SNAPSHOT'

            from components.java
        }
    }
}

test {
    useJUnitPlatform()
}